
package com.o2.manonsite.mrs;

import java.rmi.RemoteException;
import java.util.HashMap;
import org.apache.log4j.Logger;
import com.o2.common.CommunicateWithTT;
import com.o2.manonsite.WorkItem;
import com.o2.manonsite.WorkQueue;
import com.o2.manonsite.inms.INMSConnection;
import com.o2.manonsite.mrs.wsdl.MRSService;
import com.o2.manonsite.mrs.wsdl.Map;
import com.o2.manonsite.SocketProbe.wsdl.Event;
import java.text.SimpleDateFormat;
import java.util.TimeZone;
import java.util.Date;
 
import java.util.StringTokenizer;


public class MRSServiceImpl implements MRSService
{

	private static Logger log = Logger.getLogger(MRSServiceImpl.class);
    private WorkQueue workQueue;
    private WorkQueue workQueueCIC;
    private CommunicateWithTT ttServer;

    public MRSServiceImpl(WorkQueue workQueue,CommunicateWithTT ttServer,WorkQueue workQueueCIC)
    {
        this.workQueue = workQueue;
        this.ttServer = ttServer;
        this.workQueueCIC = workQueueCIC;
    }

    public void demoGetContent()
    {
    	try {
    		//Map request = MRSMessageHelper.createRequest("62946","O2","07834571893","dev 5555 heartbeat");
    		Map request = MRSMessageHelper.createRequest("62946","O2","07834571893","");
    		Map mm = getContent(request);
    	}
    	catch(RemoteException ex)
		{
    	    log.fatal("Exception caught " ,ex);
 		    System.exit(1);
		}
    }
    public Map getContent(Map request) throws RemoteException
    {
        log.info("Received call for getContent.");
        String incomingTextMessage = MRSMessageHelper.lookup(request, "msg"); 
        String replyTextMessage = null;
        Event event =null;
        boolean found = false;
        HashMap rOutput=null;
        
        try {
        	
        	long startTime = System.currentTimeMillis();
        	        	
        	String msisdn = MRSMessageHelper.lookup(request, "MSISDN");
    		log.debug("MSISDN 	:" + msisdn );
    		String scode = MRSMessageHelper.lookup(request, "SHORTCODE");
    		log.debug("SHORTCODE 	:" + scode);
    		String nwork = MRSMessageHelper.lookup(request, "NETWORK");
    		log.debug("NETWORK 	:" + nwork);
    		
        	log.debug("incomingTextMessage : " + incomingTextMessage);
        	MRSRequestInfo requestInfo = new MRSRequestInfo(incomingTextMessage);
        	
        	String cmmd = requestInfo.getCommand().toLowerCase();
        	StringTokenizer stk = new StringTokenizer(requestInfo.getCommand().toLowerCase());
        	//log.debug("NumOfToken = " + stk.countTokens());
        	if(stk.countTokens() > 1)
        	      	cmmd =stk.nextToken();
                		
            //Authenticate User Here    
    		if(cmmd.toLowerCase().equals("heartbeat"))
    		{
    			log.debug("Recieved an heartbeat");
    			event = new Event();
               	event.setLINE01(msisdn);
            	event.setLINE02(nwork);
            	event.setLINE03(scode);
            	event.setLINE04(incomingTextMessage);
            	event.setLINE05(cmmd);
    		}
    		else
    		{
    			rOutput = ttServer.AuthenticateUser(new String(msisdn));
    			
    			if(rOutput == null || new Integer((String)rOutput.get("ERRORMSG")).intValue() != 0)
    			{
    				rOutput = ttServer.AuthenticateUser("+" + new String(msisdn));
    			}
    			 
    			if(rOutput != null && new Integer((String)rOutput.get("ERRORMSG")).intValue() == 0)
    			{
    				found=true;
    			}
    			else
    				log.debug("[" + msisdn + "] Authentication failed ");
    	    	    			
    			long currentTime = System.currentTimeMillis();
    	    	SimpleDateFormat dateFormat = new SimpleDateFormat("HH:mm:ss");

    	    	dateFormat.setTimeZone(TimeZone.getTimeZone("GMT"));
    	    	long elapsed = currentTime - startTime;

    	    	log.debug("[" + msisdn + "] Authenticating took " + dateFormat.format(new Date(elapsed)));
    	    	 
    	    	String siteName = null;
				String cdsid = null;
 
    			//Get Cell Site Name from INMS WEB SERVER
    			//Invoke directly on INMS web server using pure HTTPS
    			INMSConnection inmsConnection = new INMSConnection();
    			String smsBodies[] = inmsConnection.getRequest("info",requestInfo.getCellSiteId());
    				 
    			if (log.isInfoEnabled()) log.info("CellSiteInfo called successfully for cellSiteId '" + requestInfo.getCellSiteId() + "'");
    			
    			if(smsBodies == null)
				{
    				log.warn("No Infomation was retrieved from INMSWEB");
					smsBodies = new String [2];
					smsBodies[0] = "<unKnown>";
					smsBodies[1] = requestInfo.getCellSiteId();
				}
			
    			if ((smsBodies.length == 0) || (smsBodies.length == 1 && smsBodies[0].startsWith("Sorry")))
    			{
    					if (log.isDebugEnabled())
    					{
    						if(smsBodies.length == 0)
    							log.debug(">> No  cellSite name for  " + requestInfo.getCellSiteId());
    						else
    							log.warn(smsBodies[0]);
    					}
    					cdsid = "<unKnown>";
    					siteName = requestInfo.getCellSiteId();
    			}
    			else
    			{
    					cdsid = smsBodies[0];
    					if(cdsid == null)
    						cdsid = "<unKnown>";
    					else
    						log.debug("cdsid = " + cdsid);
					
    					if(smsBodies.length == 1)
    						siteName = requestInfo.getCellSiteId();
    					else
    						siteName = smsBodies[1];
    					
    					log.debug("siteName = " + siteName); //use the siteID instead then
    			}
    			String padCellSite = MRSRequestThread.padStr(requestInfo.getCellSiteId(),6);
    			event = new Event();
            	
    			event.setLINE01(msisdn);
    			event.setLINE02(nwork);
    			event.setLINE03(scode);
    			event.setLINE04(incomingTextMessage);
    			event.setLINE05(cmmd);
    			event.setLINE06(padCellSite);
    			if(cdsid.startsWith(":"))
    				cdsid = cdsid.substring(1);
    			event.setLINE07(cdsid);
    			if(siteName.startsWith(":"))
    				siteName = siteName.substring(1);
    			event.setLINE08(siteName);
    			
    			if(!found && !cmmd.startsWith("cal") && !cmmd.startsWith("in") && !cmmd.startsWith("out") && !cmmd.startsWith("txt") && !cmmd.startsWith("text")) {
    				log.warn("[" + msisdn + "]Cannot authenticate " + requestInfo.getCellSiteId() + " Request terminated"); 
    				replyTextMessage = "This phone is not allowed to do this command.  If you register with the NMC, O2 may allow you to do more functions.";
    				//replyTextMessage = "Warning you are not a known field engineer. Contact the O2 NOC on 01234 67 8899 immediately";
    		
        			event.setLINE09("");
        			event.setLINE10("");
        			event.setLINE11("");
        			event.setLINE12("");
    			}
    			else  
    			{
    				String smsg="";
    				String emsg=" "+ padCellSite ;
    				if((cmmd.startsWith("out") || cmmd.startsWith("in") || cmmd.startsWith("cal") || cmmd.startsWith("txt") || cmmd.startsWith("text") ) && !found)
    				{
    					if(cmmd.startsWith("out"))
    					{ smsg = "You have just txt out of CSR ";}
    					else if (cmmd.startsWith("in"))
    					{smsg = "Your presence is txt-in @ CSR" ;emsg +=". If you register with the NMC, you can do more functions."  ;}
    					else if (cmmd.startsWith("cal"))
    					{smsg = "";}
    					else if (cmmd.startsWith("txt")||cmmd.startsWith("text") )
    					{smsg ="";} 
    				}
    				else
    				{
    					if(rOutput.get("FIRSTNAME") == null)
    						rOutput.put("FIRSTNAME","UnIdentified");
    					if(rOutput.get("LASTNAME") == null)
    						rOutput.put("LASTNAME"," Authenticated User");
    					if(rOutput.get("COMPANY") == null)
    						rOutput.put("COMPANY","Unknown company");
    					
    					if(rOutput.get("FIRSTNAME") == null || rOutput.get("LASTNAME") == null || rOutput.get("COMPANY") == null)
    						log.warn("Although Authenticated, some/all of this user's infomation is not present");
    					smsg = "Hello " + (String)rOutput.get("FIRSTNAME") + " " + (String)rOutput.get("LASTNAME") + " of " + (String)rOutput.get("COMPANY") + " ";
    					if(cmmd.startsWith("in"))
    						{ smsg += " We have you @ CSR ";}
    					if(cmmd.startsWith("out"))
    					{ smsg = "You have just txt out of CSR ";}
    					emsg = " "+ padCellSite;
    					if(!requestInfo.getCellSiteId().equals(siteName))
    						{ emsg += " - " + siteName ;}
    				}
    				emsg += ". Thx 4 using Maxim.";
	            
    				if (cmmd.startsWith("ala")) 
    				{
    					cmmd = "alarm";
    					replyTextMessage = smsg + ". Processing your request for alarms for CSR "  + emsg; 
    				}
    				else if (cmmd.startsWith("aud")) 
    				{
    					cmmd = "audit";
         	       		replyTextMessage = smsg +". Processing your request for audit for CSR " + emsg; 
    				}
    				else if (cmmd.startsWith("dir") || cmmd.startsWith("loc") || cmmd.startsWith("access")) 
    				{ 
    					cmmd = "direct";
    					replyTextMessage = smsg +". Processing your request for directions for CSR " + emsg; 
    				}
    				else if (cmmd.startsWith("safe")) 
    				{ 
    					cmmd = "safe";
    					replyTextMessage = smsg +". Processing your request for safety information for CSR " + emsg; 
    				}
    				else if (cmmd.startsWith("note")) 
    				{ 
    					cmmd = "note";
    					replyTextMessage = smsg +". Processing your request for site notes for CSR " + emsg; 
    				}
    				else if (cmmd.startsWith("cop")) 
    				{ 
            		 	cmmd ="copy";
    					replyTextMessage = smsg +". Processing your request to enable alarm diverts for CSR " + emsg; 
    				}
    				else if (cmmd.startsWith("in")) 
    				{ 
    					cmmd ="in";
    					replyTextMessage = smsg + emsg; 
    				}
    				else if (cmmd.startsWith("out")) 
    				{ 
    					cmmd = "out";
    					replyTextMessage = smsg + emsg ; 
    				}
    				else if (cmmd.startsWith("cal")) 
    				{ 
    					cmmd = "callme"; 
    					replyTextMessage = smsg +". We are processing a CALLME request for you @ CSR  " + emsg;
    				}
    				else if (cmmd.startsWith("txt") || cmmd.startsWith("text") ) 
    				{ 
    					cmmd = "textin";
    					replyTextMessage = smsg +". Processing your request 'TextIn' for CSR " + emsg; 
    				}
    				else 
    				{
    					cmmd = requestInfo.getCommand();
    					replyTextMessage = smsg + "Unknown command '" + requestInfo.getCommand() + "'. The message format is Fundamentally flawed Please call the NMC for help";
    					replyTextMessage = "Your message appears corrupt.  Please phone the O2 - NMC for guidance";
    				}
    				event.setLINE09((String)rOutput.get("FIRSTNAME"));
    				event.setLINE10((String)rOutput.get("LASTNAME"));
    				event.setLINE11((String)rOutput.get("COMPANY"));
    				event.setLINE12((String)rOutput.get("EMAILADDRESS"));
				 				
    				if (log.isInfoEnabled()) log.info("Creating work item for cellSite " + siteName);
	
    				//if(!cmmd.startsWith("cop") && !cmmd.startsWith("cal") && !cmmd.equals("in") && !cmmd.equals("out")  ) 
    				//{
    						//Send request to INMSWeb or Db Server
 
    						workQueue.enqueueWork( new WorkItem(
    						MRSMessageHelper.lookup(request, "SHORTCODE"),
							MRSMessageHelper.lookup(request, "NETWORK"),
							//"447789387787",
							MRSMessageHelper.lookup(request, "MSISDN"),
							requestInfo.getCellSiteId(),
							requestInfo.getPrefix(),
							cmmd)
    						);
    				//}
	        	
	            //TO DO - maybe not send an event when command is not recongnised.
	            //Send alarm to CIC and MapInfo
    			}
	     	}     
    		workQueueCIC.enqueueWork(event);
    		
        }
 		catch (MRSRequestInfoException ex) {
 		   log.warn("Incoming text message was formatted incorrectly.",ex); 
 		   replyTextMessage = ex.getMessage();
 		}
 		catch (Exception ex) {
 		    replyTextMessage = "Exception while trying to process request!"; 
 		    log.warn(replyTextMessage,ex);
 		    System.exit(1);
 		}
 		catch (java.lang.Error e) {
 		    replyTextMessage = "Exception while trying to process request!"; 
 		    log.warn(replyTextMessage,e);
 		   	System.exit(1); 		    
 		}
 		
 		
        if (log.isInfoEnabled()) log.info("Sending response '" + replyTextMessage + "'");
        
 		return MRSMessageHelper.createResponse(MRSMessageHelper.FLASH_MESSAGE,
                MRSMessageHelper.MTCODE, replyTextMessage);
 		
    }  
    

        
}
