
package com.o2.techm.netcool.eai.o2gateway.remedy.webservice;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * Create an incident ticket and add work info
 * 		
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.5-b01 
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "TGTUK_NETCOOL_HPD_WSService", targetNamespace = "urn:TGTUK_NETCOOL_HPD_WS", wsdlLocation = "TGTUK_NETCOOL_HPD_WS.wsdl")
public class TGTUKNETCOOLHPDWSService
    extends Service
{

    private final static URL TGTUKNETCOOLHPDWSSERVICE_WSDL_LOCATION;
    private final static WebServiceException TGTUKNETCOOLHPDWSSERVICE_EXCEPTION;
    private final static QName TGTUKNETCOOLHPDWSSERVICE_QNAME = new QName("urn:TGTUK_NETCOOL_HPD_WS", "TGTUK_NETCOOL_HPD_WSService");

    static {
        TGTUKNETCOOLHPDWSSERVICE_WSDL_LOCATION =TGTUKNETCOOLHPDWSService.class.getResource("/wsdl/TGTUK_NETCOOL_HPD_WS.wsdl");
        WebServiceException e = null;
        if (TGTUKNETCOOLHPDWSSERVICE_WSDL_LOCATION == null) {
            e = new WebServiceException("Cannot find '/wsdl/TGTUK_NETCOOL_HPD_WS.wsdl' wsdl. Place the resource correctly in the classpath.");
        }
        TGTUKNETCOOLHPDWSSERVICE_EXCEPTION = e;
    }

    public TGTUKNETCOOLHPDWSService() {
        super(__getWsdlLocation(), TGTUKNETCOOLHPDWSSERVICE_QNAME);
    }

    public TGTUKNETCOOLHPDWSService(WebServiceFeature... features) {
        super(__getWsdlLocation(), TGTUKNETCOOLHPDWSSERVICE_QNAME, features);
    }

    public TGTUKNETCOOLHPDWSService(URL wsdlLocation) {
        super(wsdlLocation, TGTUKNETCOOLHPDWSSERVICE_QNAME);
    }

    public TGTUKNETCOOLHPDWSService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, TGTUKNETCOOLHPDWSSERVICE_QNAME, features);
    }

    public TGTUKNETCOOLHPDWSService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public TGTUKNETCOOLHPDWSService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns HPDIncidentInterfaceNETCOOLWSPortTypePortType
     */
    @WebEndpoint(name = "HPD_IncidentInterface_NETCOOL_WSPortTypeSoap")
    public HPDIncidentInterfaceNETCOOLWSPortTypePortType getHPDIncidentInterfaceNETCOOLWSPortTypeSoap() {
        return super.getPort(new QName("urn:TGTUK_NETCOOL_HPD_WS", "HPD_IncidentInterface_NETCOOL_WSPortTypeSoap"), HPDIncidentInterfaceNETCOOLWSPortTypePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns HPDIncidentInterfaceNETCOOLWSPortTypePortType
     */
    @WebEndpoint(name = "HPD_IncidentInterface_NETCOOL_WSPortTypeSoap")
    public HPDIncidentInterfaceNETCOOLWSPortTypePortType getHPDIncidentInterfaceNETCOOLWSPortTypeSoap(WebServiceFeature... features) {
        return super.getPort(new QName("urn:TGTUK_NETCOOL_HPD_WS", "HPD_IncidentInterface_NETCOOL_WSPortTypeSoap"), HPDIncidentInterfaceNETCOOLWSPortTypePortType.class, features);
    }

    private static URL __getWsdlLocation() {
        if (TGTUKNETCOOLHPDWSSERVICE_EXCEPTION!= null) {
            throw TGTUKNETCOOLHPDWSSERVICE_EXCEPTION;
        }
        return TGTUKNETCOOLHPDWSSERVICE_WSDL_LOCATION;
    }

}
