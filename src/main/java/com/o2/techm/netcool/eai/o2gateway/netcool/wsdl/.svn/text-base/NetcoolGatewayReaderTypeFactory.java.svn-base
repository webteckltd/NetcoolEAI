/* Generated by WSDL Java Compiler. Please do not edit this file. NetcoolGatewayReaderTypeFactory.java Version : 5.1 */
package com.o2.o2gateway.netcool.wsdl;

import com.iona.webservices.reflect.types.TypeFactory;
import javax.xml.namespace.QName;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;

/**
 * NetcoolGatewayReaderTypeFactory.
 */
public class NetcoolGatewayReaderTypeFactory implements TypeFactory {

    private static String wsdlLocation = "file:/C:/apps/eclipse/artix5workspace/O2Gateway/wsdl/NetcoolGateway.wsdl";
    private HashMap elementmap;
    private HashMap typemap;
    private HashMap exceptionmap;
    private HashMap typehandlermap;

    /**
     * Constructs a new NetcoolGatewayReaderTypeFactory.
     */
    public NetcoolGatewayReaderTypeFactory() {
        this.typemap = new HashMap();
        this.elementmap = new HashMap();
        this.exceptionmap = new HashMap();
        this.populateTypeMap();
        this.populateElementMap();
        this.populateExceptionMap();
    }

    /**
     * Constructs a new NetcoolGatewayReaderTypeFactory.
     * @param wsdlurl wsdl location.
     */
    public NetcoolGatewayReaderTypeFactory(String wsdlurl) {
        this();
        wsdlLocation = wsdlurl;
    }

    protected void populateTypeMap1() {
        typemap.put(new QName("http://ps.iona.com/artix/o2/NetcoolGateway.wsdl","NetcoolGateway.ProcessEventFailure"),com.o2.o2gateway.netcool.wsdl.NetcoolGatewayProcessEventFailure.class);
        typemap.put(new QName("http://ps.iona.com/artix/o2/NetcoolGateway.wsdl","NetcoolGateway.NVPair"),com.o2.o2gateway.netcool.wsdl.NetcoolGatewayNVPair.class);
        typemap.put(new QName("http://ps.iona.com/artix/o2/NetcoolGateway.wsdl","NetcoolGateway.EventType"),com.o2.o2gateway.netcool.wsdl.NetcoolGatewayEventType.class);
        typemap.put(new QName("http://ps.iona.com/artix/o2/NetcoolGateway.wsdl","NetcoolGateway.NetcoolEvent"),com.o2.o2gateway.netcool.wsdl.NetcoolGatewayNetcoolEvent.class);
        typemap.put(new QName("http://ps.iona.com/artix/o2/NetcoolGateway.wsdl","NetcoolGateway.NVPairList"),com.o2.o2gateway.netcool.wsdl.NetcoolGatewayNVPairList.class);
        typemap.put(new QName("http://schemas.iona.com/references","Reference"),com.iona.schemas.references.Reference.class);
    }

    /**
     * Creates a map of type names and associated java classes.
     * @see getJavaType(QName)
     */
    protected void populateTypeMap() {
        populateTypeMap1();
    }

    protected void populateElementMap1() {
        elementmap.put(new QName("http://ps.iona.com/artix/o2/NetcoolGateway.wsdl","NetcoolGateway.Reader.Event"),com.o2.o2gateway.netcool.wsdl.NetcoolGatewayReaderEvent.class);
        elementmap.put(new QName("http://ps.iona.com/artix/o2/NetcoolGateway.wsdl","NetcoolGateway.Reader.EventResult"),com.o2.o2gateway.netcool.wsdl.NetcoolGatewayReaderEventResult.class);
        elementmap.put(new QName("http://ps.iona.com/artix/o2/NetcoolGateway.wsdl","NetcoolGateway.ProcessEventFailure"),com.o2.o2gateway.netcool.wsdl.NetcoolGatewayProcessEventFailure.class);
        elementmap.put(new QName("http://ps.iona.com/artix/o2/NetcoolGateway.wsdl","NetcoolGateway.GatewayClient.takeEvents"),com.o2.o2gateway.netcool.wsdl.NetcoolGatewayGatewayClientTakeEvents.class);
        elementmap.put(new QName("http://ps.iona.com/artix/o2/NetcoolGateway.wsdl","NetcoolGateway.GatewayClient.takeEventsResult"),com.o2.o2gateway.netcool.wsdl.NetcoolGatewayGatewayClientTakeEventsResult.class);
        elementmap.put(new QName("http://ps.iona.com/artix/o2/NetcoolGateway.wsdl","NetcoolGateway.Writer.Netcool_connect"),com.o2.o2gateway.netcool.wsdl.NetcoolGatewayWriterNetcool_connect.class);
        elementmap.put(new QName("http://ps.iona.com/artix/o2/NetcoolGateway.wsdl","NetcoolGateway.Writer.Netcool_connectResult"),com.o2.o2gateway.netcool.wsdl.NetcoolGatewayWriterNetcool_connectResult.class);
        elementmap.put(new QName("http://ps.iona.com/artix/o2/NetcoolGateway.wsdl","NetcoolGateway.Writer.sendEvent"),com.o2.o2gateway.netcool.wsdl.NetcoolGatewayWriterSendEvent.class);
        elementmap.put(new QName("http://ps.iona.com/artix/o2/NetcoolGateway.wsdl","NetcoolGateway.Writer.sendEventResult"),com.o2.o2gateway.netcool.wsdl.NetcoolGatewayWriterSendEventResult.class);
        elementmap.put(new QName("http://ps.iona.com/artix/o2/NetcoolGateway.wsdl","NetcoolGateway.Writer.Deregister"),com.o2.o2gateway.netcool.wsdl.NetcoolGatewayWriterDeregister.class);
        elementmap.put(new QName("http://ps.iona.com/artix/o2/NetcoolGateway.wsdl","NetcoolGateway.Writer.DeregisterResult"),com.o2.o2gateway.netcool.wsdl.NetcoolGatewayWriterDeregisterResult.class);
    }

    /**
     * Creates a map of element names and associated java classes.
     * @see getJavaTypeForElement(QName)
     */
    protected void populateElementMap() {
        populateElementMap1();
    }

    protected void populateExceptionMap1() {
        exceptionmap.put(new QName("http://ps.iona.com/artix/o2/NetcoolGateway.wsdl","NetcoolGateway.ProcessEventFailure"),com.o2.o2gateway.netcool.wsdl.NetcoolGatewayProcessEventFailure_Exception.class);
    }

    /**
     * Creates a map of types used in wsdl fault messages
     * and associated java exception classes.
     * @see getJavaException(QName)
     */
    protected void populateExceptionMap() {
        populateExceptionMap1();
    }

    /**
     * Creates a map of type handlers.
     * @see getJavaTypeHandler(QName)
     */
    protected void populateTypeHandlerMap() {
    }

    /**
     * @see TypeFactory#getSupportedNamespaces()
     */
    public String[] getSupportedNamespaces() {
        String[] namespaces = {
            "http://ps.iona.com/artix/o2/NetcoolGateway.wsdl",
            "http://schemas.iona.com/references"
        };
        return namespaces;
    }

    /**
     * @see TypeFactory#getSchemaType(Class)
     */
    public QName getSchemaType(Class cls) throws java.lang.Exception {
        QName qn = getSchemaType(cls, typemap);
        if (qn == null) {
            qn = getSchemaType(cls, elementmap);
        }
        return qn;
    }

    private QName getSchemaType(Class cls, HashMap tmap) throws java.lang.Exception {
        Iterator it = tmap.entrySet().iterator();
        while (it.hasNext()) {
            Map.Entry entry = (Map.Entry)it.next();
            QName qName = (QName) entry.getKey();
            Class clazz = (Class) entry.getValue();
            if(clazz.getName().equals(cls.getName())) {
                return qName;
            }
        }
        return null;
    }

    /**
     * @see TypeFactory#getJavaType(QName)
     */
    public Class getJavaType(QName name) throws java.lang.Exception {
        return (Class)typemap.get(name);
    }

    /**
     * @see TypeFactory#getJavaTypeForElement(QName)
     */
    public Class getJavaTypeForElement(QName name) throws java.lang.Exception {
        return (Class)elementmap.get(name);
    }

    /**
     * @see TypeFactory#getJavaException(QName)
     */
    public Class getJavaException(QName name) throws java.lang.Exception {
        return (Class)exceptionmap.get(name);
    }

    /**
     * @see TypeFactory#getJavaTypeHander(QName)
     */
    public synchronized Class getJavaTypeHandler(QName name) throws java.lang.Exception {
        if (typehandlermap == null) {
            this.typehandlermap = new HashMap();
            this.populateTypeHandlerMap();
        }
        return (Class)typehandlermap.get(name);
    }

    /**
     * @see TypeFactory#getTypeResourceLocation()
     */
    public String getTypeResourceLocation() {
        return wsdlLocation;
    }

}
