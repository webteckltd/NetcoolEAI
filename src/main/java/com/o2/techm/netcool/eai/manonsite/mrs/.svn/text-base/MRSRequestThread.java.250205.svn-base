package com.o2.manonsite.mrs;

import org.apache.log4j.Logger;

import com.o2.manonsite.Terminatable;
import com.o2.manonsite.WorkItem;
import com.o2.manonsite.broker.BrokerException;
import com.o2.manonsite.broker.O2XMLRPCBrokerConnection;
import com.o2.manonsite.inms.INMSConnection;

public class MRSRequestThread extends Thread implements Terminatable
{
	private static Logger log = Logger.getLogger(MRSRequestThread.class);

	private O2XMLRPCBrokerConnection brokerConnection;	
	private boolean terminate = false;
	private MRSRequestThreadPool parent = null;

	public static final String expectedAlarmHeader = "alarms";
	
	public MRSRequestThread(
		MRSRequestThreadPool parent,
		String name,
		O2XMLRPCBrokerConnection brokerConnection)
	{
		super(parent, name);
		this.parent = parent;
		this.brokerConnection = brokerConnection;		
	}
	public void terminate (){
		terminate = true;
	}
	
	public void run()
	{
		while (!terminate){
			// Get the MessageRequest from the work queue.
			log.debug("Waiting for work.... ");	
			WorkItem workItem = null; 
			try {
			    workItem= (WorkItem) parent.getWorkQueue().dequeueWork();
			    
				if (workItem.getCommand().toLowerCase().startsWith("alarm")) 
				{
					// Invoke directly on INMS web server using pure HTTPS
					INMSConnection inmsConnection = new INMSConnection();
					
					if (log.isInfoEnabled()) log.info("Getting info for cellSiteId '" + workItem.getCellSite() + "'");
					String smsBodies[] = inmsConnection.getCellSiteAlarms(workItem.getCellSite());
					
					if (log.isInfoEnabled()) log.info("getCellSiteAlarms called successfully for cellSiteId '" + workItem.getCellSite() + "'");
				
					if (smsBodies.length == 0)
					{
					    if (log.isDebugEnabled()) log.debug(">> No SMS alarms for cellSite " + workItem.getCellSite());
					}
					else
					{
						if (log.isDebugEnabled()) log.debug(">> Sending " + smsBodies.length + " messages for cellSite " + workItem.getCellSite());
						
						for (int i = 0; i < smsBodies.length; i++) {
						    if (log.isDebugEnabled()) log.debug("Sending message[" + i + "]: '" + smsBodies[i] +"'"); 
						    try
	                        {
	                            brokerConnection.sendSimpleSMS(workItem.getMsisdn(), smsBodies[i]);
	                        }
	                        catch (BrokerException e)
	                        {
	                            log.error("Unable to send SMS; details:" + e.getMessage());
	                        } 
						}
					}			    
				}	
				else 
				{
				    log.warn("Workitem has unsupported command: " + workItem.getCommand());
				}
			}
			catch (InterruptedException ex) {
			    log.debug("Got an interrupted exception."); 
			    // We can ignore this; if we are interrupted because of a call to terminate() then
			    // terminate will be set to true, so the thread will run to a graceful completion.
			}
			
		}
		
        if (log.isDebugEnabled()) log.debug(this.getName() + " terminated. ");

    }
	
}
