
package com.o2.manonsite.mrs;

import java.util.Enumeration;
import java.util.Properties;

import javax.xml.namespace.QName;

import com.iona.webservices.reflect.types.AnyType;
import com.o2.manonsite.mrs.wsdl.Map;
import com.o2.manonsite.mrs.wsdl.Vector;
import com.o2.manonsite.mrs.wsdl.Map.Item;

public class MRSMessageHelper
{
    public static String MTCODE = "manonsite.co.uk/default"; // Got this from MRS support. See Peter Duguid 
    
    public static String NORMAL_SMS_MESSAGE = "NOR";  
    public static String FLASH_MESSAGE = "FLA"; 
    
    public static QName VECTOR_TYPE_QNAME = new QName("http://xml.apache.org/xml-soap", "Vector"); 
    public static QName MAP_TYPE_QNAME = new QName("http://xml.apache.org/xml-soap", "Map"); 
    
    
    public static String lookup(Map request, String key)
    {
        String ret = null;
        boolean found = false;
        int i = 0;
        while (!found && i < request.getItem().length) 
        {
            if (request.getItem()[i].getKey().getString().equalsIgnoreCase(key)) {
                found = true;
                ret = request.getItem()[i].getValue().getString();  
            }
            else { 
                i++;
            }
        }
        return ret;
    }
    
    public static Map createResponse(String messageType, String MTCode, String messageText)
    {
        Map response = new Map();
        
        Item items[] = new Item[1];
        items[0] = new Item();
        
        // Set the key of the first item to the RESPONSE "Content"
        //
        items[0].setKey(stringToAnyType("Content")); 

        items[0].setValue(new AnyType()); 
        items[0].getValue().setType(VECTOR_TYPE_QNAME, createContent(messageType, MTCode, messageText)); 

        response.setItem(items);

        return response; 
        
    }
    public static Vector createContent(String type, String MTCode, String messageText) 
    {
        
        Item items[] = new Item[3];
        
        items[0] = new Item(); 
        items[0].setKey(stringToAnyType("Type"));
        items[0].setValue(stringToAnyType(type));
        
        items[1] = new Item();
        items[1].setKey(stringToAnyType("MTCode"));
        items[1].setValue(stringToAnyType(MTCode)); 
        
        items[2] = new Item();
        items[2].setKey(stringToAnyType("Message")); 
        items[2].setValue(new AnyType()); 
        items[2].getValue().setType(MAP_TYPE_QNAME, createMessage(messageText));
 
        Map map = new Map();        
        map.setItem(items); 
        
        AnyType[] contentItem = new AnyType[1]; 
        contentItem[0] = new AnyType();
        contentItem[0].setType(MAP_TYPE_QNAME, map); 

        Vector content = new Vector();
        content.setItem(contentItem);
        
        return content; 
    }
    
    public static AnyType stringToAnyType(String s) {
        AnyType ret = new AnyType();
        ret.setString(s);
        return ret; 
    }
    
    public static Map createMessage(String messageText)
    {
        Map map = new Map(); 
        
        Item mapItems[] = new Item[1];
        
        mapItems[0] = new Item(); 
        mapItems[0].setKey(stringToAnyType("text")); 
        mapItems[0].setValue(stringToAnyType(messageText));
        
        map.setItem(mapItems); 
        
        return map;
    }
    
    public static String getRequestMessage(Map response)
    {
    	String mesg=null;
    	Item[] itemsList =response.getItem();
		for(int i=0; i<itemsList.length;i++  )
		{								 
			if(itemsList[i].getKey().getString().equals("Content"))
			{
				Vector content = (Vector)itemsList[i].getValue().getType(); 						 
				Map map =(Map)content.getItem()[0].getType();
				//String atype = MRSMessageHelper.lookup(map, "Type"); 
	    		//String mtcode = MRSMessageHelper.lookup(map, "MTCode"); 
	    		Map Mesgmap =(Map)map.getItem()[2].getValue().getType() ;
	    		mesg= Mesgmap.getItem()[0].getValue().getString();							    		
		     }									 
		}	
    	return mesg;
    }
    public static Map createRequest(String shortCode, String network, String msisdn, String msg)
    {
        Map request = new Map();
        
        Item mapItems[] = new Item[4]; 
        for (int i = 0; i < 4; i++) {
            mapItems[i] = new Item();   
        } 
        
        mapItems[0].setKey(stringToAnyType("SHORTCODE"));
        mapItems[0].setValue(stringToAnyType(shortCode));

        mapItems[1].setKey(stringToAnyType("NETWORK"));
        mapItems[1].setValue(stringToAnyType(network));

        mapItems[2].setKey(stringToAnyType("MSISDN"));
        mapItems[2].setValue(stringToAnyType(msisdn));
        
        mapItems[3].setKey(stringToAnyType("msg"));
        mapItems[3].setValue(stringToAnyType(msg));
        
        request.setItem(mapItems); 
        
        return request; 
        
    }
    
    public static Map createRequest(Properties pXML )
    {
    	String shortCode = null,   network = null,   msisdn = null,   msg = null;
    	Map request = new Map();        	 
    	//pXML.list(System.out);
    	 
    	Item mapItems[] = new Item[4 + pXML.size()]; 
    	for (int i = 0; i < 4 + pXML.size(); i++) {
    		mapItems[i] = new Item();   
    	}
    	Enumeration aenum = pXML.keys();
    	int i=0;
    	while (aenum.hasMoreElements() && i <pXML.size())
    	{
    		mapItems[i] = new Item();
    		String name = (String) aenum.nextElement(); 
    		mapItems[i].setKey(stringToAnyType(name));
    		mapItems[i].setValue(stringToAnyType(pXML.getProperty(name)));
    		i++;
    	}  

    	 /*<?xml version="1.0" encoding="utf-8" standalone="no"?><!DOCTYPE WIN_RECEIPTS SYSTEM "tpbound_receipts_v2.dtd">
    	 <WIN_RECEIPTS><SMSRECEIPT><SERVICEID>5</SERVICEID><SOURCE_ADDR>+447740630138</SOURCE_ADDR>
    	 <TRANSACTIONID>111222333</TRANSACTIONID><STATUSID>3</STATUSID>
    	 <STATUSDATETIME><DD>19</DD><MMM>NOV</MMM><YYYY>2004</YYYY><HH>10</HH><MM>16</MM><SS>7</SS></STATUSDATETIME>
    	 <TOTALFRAGMENTNO>1</TOTALFRAGMENTNO><FRAGMENTID>1</FRAGMENTID></SMSRECEIPT></WIN_RECEIPTS>
    	 
    	 <?xml version="1.0" encoding="iso-8859-1" standalone="no"?><!DOCTYPE WIN_TPBOUND_MESSAGES SYSTEM "tpbound_messages_v1.dtd">
    	 <WIN_TPBOUND_MESSAGES><SMSTOTP><SOURCE_ADDR>+447740630138</SOURCE_ADDR><TEXT>bulktesth2</TEXT>
    	 <WINTRANSACTIONID>357613334</WINTRANSACTIONID><DESTINATION_ADDR>82222</DESTINATION_ADDR>
    	 <SERVICEID>2</SERVICEID><NETWORKID>2</NETWORKID>
    	 <ARRIVALDATETIME><DD>19</DD><MMM>NOV</MMM><YYYY>2004</YYYY><HH>10</HH><MM>41</MM></ARRIVALDATETIME>
    	 </SMSTOTP></WIN_TPBOUND_MESSAGES>

*/

    	mapItems[i].setKey(stringToAnyType("SHORTCODE"));
    	mapItems[i++].setValue(stringToAnyType(pXML.getProperty("DESTINATION_ADDR")));

    	mapItems[i].setKey(stringToAnyType("NETWORK"));
    	mapItems[i++].setValue(stringToAnyType(pXML.getProperty("NETWORKID")));

    	mapItems[i].setKey(stringToAnyType("MSISDN"));
    	mapItems[i++].setValue(stringToAnyType(pXML.getProperty("SOURCE_ADDR")));

    	mapItems[i].setKey(stringToAnyType("msg"));
    	mapItems[i].setValue(stringToAnyType(pXML.getProperty("TEXT")));

    	request.setItem(mapItems); 

    	return request; 

    }
}
